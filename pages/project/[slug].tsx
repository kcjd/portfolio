import { Project } from '@prisma/client'
import { GetStaticPaths, GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import Button from '../../components/Button'
import Container from '../../components/Container'
import { prisma } from '../../lib/prisma'

type Props = {
  project: Project
}

const Project: NextPage<Props> = ({ project }) => {
  return (
    <>
      <Head>
        <title>{project.title} | KÃ©vin Colonjard</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <section className={`bg-${project.color}`}>
        <div className="max-w-screen-lg mx-auto">
          <Image src={`/${project.thumbnail}`} width={1500} height={1200} layout="responsive" alt="" />
        </div>
      </section>

      <section className="py-24">
        <Container>
          <div className="mb-12">
            <h1 className="text-4xl font-bold">{project.title}</h1>
            <p className="text-2xl text-gray-500">{project.subtitle}</p>
          </div>

          <p className="max-w-prose mb-12 text-xl leading-normal text-gray-500">{project.body}</p>

          <div className="flex gap-4">
            <Button as="a" href={project.link} target="_blank" rel="noreferrer" icon="north_east">
              Voir le projet
            </Button>

            <Button variant="secondary" as="a" href={project.repo} target="_blank" rel="noreferrer">
              Github
            </Button>
          </div>

          <div className="flex flex-col gap-14 mt-24">
            {project.images.map((image) => (
              <div key={image} className="rounded-lg shadow overflow-hidden">
                <Image src={`/${image}`} width={2880} height={1800} layout="responsive" alt="" />
              </div>
            ))}
          </div>
        </Container>
      </section>
    </>
  )
}

export const getStaticPaths: GetStaticPaths = async () => {
  const projects = await prisma.project.findMany({
    where: {
      published: {
        equals: true
      }
    },
    select: {
      slug: true
    }
  })

  return {
    paths: projects.map((project) => ({ params: { slug: project.slug } })),
    fallback: false
  }
}

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const project = await prisma.project.findUnique({
    where: {
      slug: params?.slug as string
    },
    select: {
      id: true,
      slug: true,
      title: true,
      subtitle: true,
      color: true,
      thumbnail: true,
      link: true,
      repo: true,
      images: true,
      body: true
    }
  })

  return {
    props: {
      project: project
    }
  }
}

export default Project
